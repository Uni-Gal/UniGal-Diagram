<?xml version="1.0" encoding="utf-8"?>
<node>
  <identification>
    <name>
      //内部标识用的名字
    </name>
    <uuid>
      //和内部标识的名字至少有一件
    </uuid>
  </identification>
  <description>
    //显示出来的描述或标题等名字
  </description>
  <type>
    <start>
      //是第几周目
    </start>
    <end>
      //是哪个结局
    </end>
    <label>
      //可以不填，代表是普通的节点
    </label>
    <switch>
      <condiation>
        //填写这个分支的进入条件,顺序和nextlist里面一致
      </condiation>
      <condiation>
        //填写这个分支的进入条件,顺序和nextlist里面一致
      </condiation>
    </switch>
    <action operation="add"><!--此外还有sub,multiply,divide,square,set-->
      <var>
        //变量名，类型只有unsigned long long int，包括bool在内也是int。需要浮点的自行除100或者更多。
		//在第一次使用变量的时候需要先声明，声明变量的时候操作类型是malloc
      </var>
      <num>
        //操作数量
      </num>
    </action>
  </type>
  <nextlist>
    <next>
      //下一节点名字/uuid
    </next>
    <next>
      //下一节点名字/uuid,如果该节点type不为switch则只看第一个
    </next>
	//只有end才可以没有next
  </nextlist>
  <sourcelist>
    <source>
      //上一节点名字/uuid
    </source>
    <source>
      //上一节点名字/uuid
    </source>
	//只有start才可以没有source
  </sourcelist>
  <additional><!--以下均为选加，也可以需要啥加啥-->
    <image>
      <!--允许节点包含一张图片，在render中会直接以图片代替节点，路径的写法应按照Script中的路径写法-->
      <!--https://github.com/Uni-Gal/UniGal-Script/blob/master/Docs/zh_CN/UniGal-filesystem.md-->
    </image>
    <statuslist>
      <!--允许条件构建的type、nextlist、sourcelist-->
	  <!--条件构建的时候，会优先使用条件中的，只有不满足任何一个条件的时候，才会使用节点default的（但是得有）-->
	  <!--（本条作废，因为不打算引入关键字，想保证文件名暂无限制）条件编译的节点可以单独分成若干个文件，也可以部分独立出去，也可以完全写在同一文件内。但是独立出去的，前缀必须是主文件的名称加下划线-->
    </statuslist>
	<statusnodedata>
	  <status name="SSR">
	    <type></type>
		<nextlist></nextlist>
		<sourcelist></sourcelist>
	  </status>
	  <status name="S">
	  </status>
	</statusnodedata>
  </additional>
</node>
